 Функциональное программирование
 
 Программу составил: 
Сошников Дмитрий Валерьевич, 
к.ф.-м.н., доцент, 
координатор академических программ Департамента стратегических технологий Майкрософт Россия

Цели и задачи курса

После изучения курса "Функциональное программирование" студент должен знать:
общие принципы функционального подхода к программированию, преимущества и недостатки функционального подхода для реализации программных систем
алгоритмические модели (-исчисления и комбинаторной логики, лежащие в основе функционального программирования
инструментальные средства и основные языки функционального программирования
использование функционального стиля программирования и элементов функционального программирования в традиционных императивных языках (С++,  C # 3.0), в языках трансформации  XSLT  и др.
подходы и средства к построению трансляторов с функциональных языков, на основе интерпретации и компиляции в код абстрактной машины
подходы к описанию семантики функциональных языков на основе денотационной семантики и операционной семантики абстрактной машины

Он должен уметь:
разрабатывать, кодировать, тестировать и отлаживать программы на языках функционального программирования или в функциональном стиле
использовать функции высших порядков, функции-как-данные и замыкания
использовать языки функционального программирования для реализации известных алгоритмов информатики
выделять характерные задачи для применения функционального подхода и предлагать способы их решения
использовать подходы и языки логического программирования при построении программных систем, в том числе совместно с традиционными системами программирования


Содержание дисциплины

Тема 1. Парадигмы программирования. Примеры функционального подхода к программированию. Использование функционального подхода в современной программной инженерии.
Понятие о программировании и алгоритмической модели. История языков программирования. Традиционный подход к программированию машин с архитектурой фон Неймана. Языки низкого и высокого уровня. Функциональная, объектно-ориентированная абстрации и абстракция данных при декомпозиции задач. Основные парадигмы программирования: императивная, декларативная, аппликативная и др. Пример решения задач на языке функционального программирования (факториал, сумма натуральных чисел от 1 до  N , преобразование изображений, построение графического изображения множества Мандельброта, построение трехмерного графика функции). Другие парадигмы программирования. Мультипарадигмальные языки ( Oz ,  Mercury ). Примеры программных систем, разработанных на функциональных языках ( Emacs ,  HeVeA , .). Функциональное программирование в современных промышленных языках ( C # 3.0,  F #). Пример программирования в функциональном стиле. Особенности функционального стиля программирования (отсутствие побочных эффектов, функции как данные,  immutability  и др.).

Тема 2. Аппликативная модель вычислений. (-исчисление и комбинаторная логика.
Основные идеи и нотация (-исчисления. Каррирование. Парадокс Рассела. (-исчисление как формальная система. Синтаксис. Свободные и связанные переменные. Правила подстановки и (-конверсия. Экстенсиональность. Редукция и стратегии редукции. Жадные и ленивые вычисления. Мемоизация. Теорема Черча-Россера. Комбинаторная логика и комбинаторы. Чистое (-исчисление и прикладные теории. Пополнение семантического базиса для реализации различных информационных объектов.

Тема 3. (-исчисление как язык программирования. 
От формальной системы к языку программирования. Язык  FP  Дж.Бэкурса. Основы синтаксиса функционального языка семейства  ML : запись (-выражений, пары и  n -ки, логические значения, натуральные числа. Представление данных в (-исчислении. Теорема о полноте по Тьюрингу.  let -выражения. (-исчисление как декларативный язык. Отображения и функционалы. Контекст вычислений и лексическое замыкание. Использование замыканий для реализации потоков и ленивых (отложенных) вычислений. Вычисления с бесконечными списками.

Тема 4. Типизация в языках функционального программирования
Понятие о бестиповых языках и языках со слабой и строгой типизацией. Статическая и динамическая типизация. Понятие типа данных в императивных языках и формальных аксиоматических системах. Реализация динамической типизации в бестиповых языках. Типизированное (-исчисление. Типизация по Черчу и по Карри. Полиморфизм. Теорема о сохранении типов.  let -полиморфизм. Конструкторы типов. Наиболее общий тип и алгоритм Милнера. Система типов Хиндли-Милнера. Вывод типов. Типизированная комбинаторная логика.

Тема 5. Рекурсия и рекурсивные структуры данных.
Рекурсивные функции. Комбинатор неподвижной точки. Определение рекурсивных структур данных. Операция сопоставления с образцом. Списки и основные операции со списками: определение длины, принадлежность элемента списку, конкатенации двух списков, удаления элемента из списка, перестановки, определение подсписка. Пример: алгоритмы сортировки. Деревья. Пример: сортировка списка при помощи упорядоченного дерева. Использование функциональной абстракции и функционалов высших порядков для унификации функций обработки данных: итераторы и другие списковые комбинаторы. Хвостовая рекурсия и аккумуляторы.

Тема 6. Языки функционального программирования.
Дополнительные возможности  ML . Императивные элементы: исключения, ссылки и массивы, ввод-вывод. Диалекты  ML  ( OCaml ,  SML ,  F #). Языки с ленивой стратегией вычислений  Miranda  и  Haskell , их особенности и диалекты. Модули и монады. Классические функциональные языки:  LISP  и  Scheme . Функциональное программирование на  Python .


Тема 7. Основы логического программирования. Продукционное программирование и сопоставление с образцом.
Дальнейшее развитие декларативного подхода к программированию. Продукционное программирование. Логическое программирование. Унификация. Алгоритм работы логического интерпретатора. Недетерминированные стратегии вычислений. Возврат и перебор. Стратегии логического вывода и доказательства теорем. Реализация механизма вывода с возвратами. Функционально-логический язык  Mercury . Особенности типизации. Система типов Майкрофта-О'Кифа. Недетерминированные вычисления в логическом программировании.

Тема 8. Объектное и объектно-ориентированное программирование.
Основные концепции объектного подхода к программированию. Объектно-ориентированный анализ, моделирование и программирование. Объектная природа функциональных языков. Моделирование объектности на чистых функциональных языках. Объектные расширения функциональных языков:  CLOS ,  Flavors ,  Objective Caml ,  F #,  SML . Формализация объектных моделей.
 
 Тема 9. Метапрограммирование, параллельное и асинхронное программирование. 
Метапрограммирование.  Domain Specific Languages  и их реализация на функциональных языках. Конструкции метапрограммирования в  F #: квотирование, монадические выражения. Примеры реализации монад недетерминированных вычислений. Порождение программ на  F #, частичная компиляция и суперкомпиляция. Параллельные и асинхронные вычисления. Локально-агентная архитектура параллельных и асинхронных приложений на  F #.

Тема 10. Символьные вычисления и компьютерная алгебра.
Применение языков функционального программирования в компьютерной алгебре. Представление целых чисел произвольной длины. Точные численные операции для вещественных чисел. Операции над символьными арифметическими выражениями. Алгоритм дифференциирования выражений. Простейшие способы упрощения выражений.
 
Тема 1 1 . Анализ естественных и искусственных языков. 
Лексический и синтаксический анализ. Грамматики. Контестно-свободные грамматики. Поверхностные и глубинные структуры фраз, приведение их к канонической форме. Представление предложения в контестно-свободной грамматике в виде дерева разбора. Разбор предложений в контестно-свободной грамматике. Разбор предложений методом рекурсивного спуска. Использование расширенной сети переходов для представления более богатых грамматик. Разбор предложений на естественном языке. Подход к представлению и интерпретации сообщений на естественном языке. 
 
Тема 1 2 . Операции над функциональнми программами. Доказательство программ. Семантика языков функционального программирования.
Функциональные программы как математические объекты. Построение расширяемого мета-транслятора языка функционального программирования. Алгоритмическая неразрешимость проблемы корректности. Тестирование и верификация, пределы верификации. Примеры доказательства корректности программ (возведение в степень,  GCD , конкатенация списков). Понятие семантики языков программирования. Подходы к определению семантики: операционный, денотационный, пропозиционный. Денотационная семантика и теория вычислений Д.Скотта. Семантика абстрактных машин:  SECD -машина, КАМ. Преобразование функциональных программ в инструкции КАМ. Код де Брейна.



Тема 1 3 . Современные направления развития функционального  программирования. Функциональное программирование в промышленном программировании.
Особенности функционального программирования для разработки пользовательских интерфейсов, ориентированных на события систем, систем реального времени, систем с параллелизмом. Пример: определение функции параллельного агрегирования элементов списка на  F #. Возможности современных систем функционального программирования ( F #,  SML ,  Haskell / Hugs ,  Mercury ). Пример: 3 D -визуализация с использованием  F # и  Managed DirectX . Функциональное программирование в современных императивных и объектно-ориентированных языках и средах:  C # 2.0,  C # 3.0 (функциональные типы и делегаты, лямбда-нотация, анонимные типы и вывод типов, унификация доступа к данным  LINQ  и др.). Построение систем на основе интероперабельности функциональных ( F #) и императивных языков на платформе  Microsoft  . NET . Функциональный язык преобразования слабоструктурированных данных  XSLT . Использование функционального подхода для быстрого прототипирования программных систем. Подход к отладке и тестированию функциональных программ. Облачные вычисления. Использование  F#  для программирования телефонов на базе  Windows Phone 7.
 
Список литературы 

Сошников Д.В. Функциональное программирование на языке  F #. - М.: ДМК Пресс, 2011.
Смит К. Программирование на  F #. - М.: Символ-плюс, 2011.
 D.Syme, A.Granicz, A.Cisternio. Expert F# 2.0. Apress, 2010.T.Neward, A.Erickson, 
T.Crowell, R.Minerich. Professional F# 2.0. Wiley Publishing, 2011.
T.Petricek, J.Skeet. Real World Functional Programming: With Examples in F# and C#. Manning Publications, 2010.
R.Pickering, Beginning F#, Apress, 2009.
J.Harrop, F# for Scientists, Wiley Publishing, 2008.
 Хювёнен Э., Сеппенен И. Мир Lisp'а. В 2-х томах. М.: Мир, 1990.
Бердж В. Методы рекурсивного программирования. М.: Машиностроение, 1983.
Филд А., Харрисон П. Функциональное программирование. М.: Мир, 1993.
Хендерсон П. Функциональное программирование. Применение и реализация. М.: Мир, 1983.
 Harrison, J. Introduction to Functional Programming. Lecture Notes, Cambridge University, 1997.
E. Chailloux, P. Manoury, B.Pagano. Developpement d'applications avec Objective Caml. O'Reilly, 2000. Русский перевод: http://shamil.free.fr/comp/ocaml/ 
 Джонс С., Лестер Д. Реализация функциональных языков. М .:  Мир , 1991.
Henson M. Elements of functional languages. Dept. of CS. University of Sassex, 1990.
Fokker J. Functional programming. Dept. of CS. Utrecht University, 1995.
Thompson S. Haskell: The Craft of Functional Programming. 2-nd edition, Addison-Wesley, 1999.
Bird R. Introduction to Functional Programming using Haskell. 2-nd edition, Prentice Hall Press, 1998.

