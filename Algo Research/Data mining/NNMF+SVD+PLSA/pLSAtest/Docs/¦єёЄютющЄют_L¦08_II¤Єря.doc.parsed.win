 Отчет Пустовойтова Н. Ю. по I I  этапу по теме 08 
"Поиск похожих пользователей в социальных сетях" 
 На первом этапе выполнения НИОКР было создано несколько выборок данных сервиса Livejournal с помощью робота, написанного на PHP. Также была создана первая версия библиотеки для работы с разреженными данными. Однако оказалось, что предложенная реализация не является идеальной для применения во всех модулях проекта, где требуется использование разреженных матриц.
На втором этапе были произведены значительные доработки робота для ускорения его работы. Модули робота, предназначенные для обработки полученного по сети контента, были переписаны на С++. Это позволило значительно ускорить скачивание данных и в настоящее время скорость скачивания лимитирована ограничением социальной сети LiveJournal на число запросов с одного IP в единицу времени. В дальнейшем планируется написание сетевого диспетчера-балансира для распараллеливания запросов к социальной сети через набор бесплатных публичных прокси-серверов с целью ускорить скорость скачивания данных.
Первая реализация разреженных матриц показала, что их узким местом является скорость выделения памяти. В связи с этим были написаны свой менеджер памяти, использующий особенности использования памяти в рассматриваемой задаче, и новая реализация разреженных матриц, использующая вышеупомянутый менеджер памяти. Однако это не дало желаемых результатов. Для решения проблемы  были проанализированы все случаи использования разреженных матриц в проекте. Благодаря этому было выявлено несколько сценариев их использования. Для каждого сценария использования сейчас разрабатывается свой движок, учитывающий особенности сценария. Например, матрица исходных данных заполняется только 1 раз, затем число ее элементов остается неизменным; главное требование - высокая скорость операций чтения. Матрица для хранений профилей, наоборот, очень часто изменяет значения своих элементов. Существует также еще несколько типов разреженных матриц. 
Была начата разработка рекомендательных алгоритмов. В первую очередь упор делался на использование простых, широко распространенных методов. Это позволило получить некоторый базовый уровень ( baseline ), с которым можно будет сравнивать алгоритмы собственной разработки. В качестве базового был выбран Item-Based подход для заполнения пропущенных значений[1]. Для вычисления близости использовалась формула cosine similarity. На этом этапе близость пользователей вычислялась только по одной из матриц - либо по матрице пользователи-интересы, либо по матрице пользователи-пользователи.
Был предложен подход, предполагающий, что существует некоторое скрытое описание объектов. Каждый объект задачи описывался математическим вектором дробных величин таким образом, что сумма координат вектора для каждого пользователя равна 1. В дальнейшем такой вектор будем называть профилем. Каждую координату профиля можно интерпретировать как близость объекта какой-либо теме (топику). Зная профиль интереса, по матрице "пользователи-интересы" можно вычислить ("индуцировать") профиль пользователя, и наоборот. Зная профили объектов, можно вычислить их близость.
Также был предложен эвристический алгоритм, использующий профили объектов. Был построен итерационный процесс, на каждой итерации которого сближались профили близких объектов и занулялись малые координаты профилей. При некоторых значениях параметров алгоритм показал результаты, немного превосходящие значения базового уровня. Вместе с тем, этот алгоритм позволяет дать интерпретацию, почему именно объекты близки, в отличие от базового уровня. 

 Список литературы.
 Resnick, Iacovou, Suchak, Bergstrom and Riedl (1994). Grouplens: An open architecture for collaborative filtering of netnews.  In Proceedings of the ACM 1994.
