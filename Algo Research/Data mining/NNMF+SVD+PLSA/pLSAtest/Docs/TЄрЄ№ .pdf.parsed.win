
Том9, 2006 СИБИРСКИЙ ЖУРНАЛ ВЫЧИСЛИТЕЛЬНОЙ МАТЕМАТИКИ №3 Скелетизация многосвязной многоугольной фигуры на основе дерева смежности ее границы¤ Л.М. Местецкий УДК 681.3 Местецкий Л.М. Скелетизация многосвязной многоугольной фигуры на основе дерева смежности ее границы //Сиб. журн. вычисл. математики /РАН. Сиб. отд-ние.-- Новосибирск, 2006. -- Т. 9, № 3. -- С. 201-216. Рассматривается задача построения непрерывного скелета многоугольной фигуры замкнутой об- ласти, граница которой состоит из конечного числа простых непересекающихся многоугольников. Пред- лагается алгоритм вычисления скелета за время O(n log n) в худшем случае, где n общее число вершин фигуры. Отличительной особенностью алгоритма является построение двойственного к диаграмме Во- роного графа смежности сайтов, образующих границу фигуры. В основе решения лежит построение дерева смежности всех многоугольников методом плоского заметания. При этом сайты и многоуголь- ники считаются смежными, если они имеют общую касательную пустую окружность. Предложенный подход позволяет обобщить известный алгоритм Ли, используемый для построения скелета простого многоугольника, на случай многосвязной многоугольной фигуры. Ключевые слова: многоугольник с дырами, скелет, граф Делоне, смежность многоугольников, плоское заметание. Mestetskiy L.M. Skeletonization of a multiply-connected polygonal domain based on its boundary adjacent tree //Siberian J. of Numer. Mathematics /Sib. Branch of Russ. Acad. of Sci. -- Novosibirsk, 2006. -- Vol. 9, № 3. -- P. 201-216. The problem of a continuous skeleton construction for a multiply connected polygonal domain is consid- ered. The polygonal domain is a closed one, whose boundary consists of a finite number of simple polygons. The O(n log n) algorithm for the worse case is offered, where n is the number of polygonal domain vertices. The proposed algorithm creates the dual graph for the Voronoi diagram of the domain boundary. The solution is based on the adjacent tree of all the boundary polygons created by a sweepline method. In this case, sites and polygons are called adjacent if they have a common contact empty circle. The offered approach generalizes the Lee skeleton algorithm from a simple polygon to that with holes with the same running time. Key words: polygon with holes domain, skeleton, Delaunay graph, Lee algorithm, polygon adjacency, sweepline. 1. Введение Многоугольная многосвязная фигура (ММФ) это замкнутая ограниченная область в евклидовой плоскости, граница которой состоит из простых замкнутых ломаных линий (многоугольников). ММФ представляет собой "многоугольник с многоугольными дыра- ми" и служит удобной моделью для описания формы объектов в компьютерной графике, анализе и распознавании изображений. В частности, любое бинарное растровое изобра- жение может быть аппроксимировано с помощью ММФ с точностью, равной размеру пикселя в смысле метрики Хаусдорфа [1]. ?Работа выполнена при финансовой поддержке РФФИ (грант 05-01-00542).
202 Л.М. Местецкий Мы рассматриваем задачу построе- ния скелета множества серединных осей ММФ (рис. 1). Скелетом замкнутой области называется геометрическое ме- сто точек области, являющихся центра- ми максимальных по включению вписан- ных окружностей. Скелет используется для исследования топологических и мет- рических свойств области, что находит применение во многих методах анализа и распознавания изображений. Примене- ние скелетов в системах машинного зре- ния ставит высокие требования к вычис- лительной эффективности алгоритмов их построения. Теоретическая оценка вычис- Рис. 1. Многоугольная многосвязная фигура и ее скелет лительной сложности задачи построения скелета ММФ есть O(n log n), где n число вершин ММФ. Эта оценка получается на основе сведения задачи к построению диа- граммы Вороного множества отрезков на плоскости [2]. Из диаграммы Вороного скелет можно получить путем удаления части ребер за время O(n). Среди эффективных алгоритмов построения диаграммы Вороного для произволь- ного множества отрезков на плоскости следует отметить алгоритмы Киркпатрика [2], Форчуна [3] и Япа [4]. Исторически первый среди них алгоритм Киркпатрика являет- ся не вполне корректным и может привести к ошибочному результату. Пример, демон- стрирующий подобную ситуацию, приведен в [6]. Алгоритмы Форчуна и Япа, имеющие сложность O(n log n), весьма трудны для реализации. Кроме того, в силу универсаль- ности, они строят диаграмму Вороного не только внутри, но и вне ММФ, что является лишней работой. Более простой (и хронологически более ранний) O(n log n) алгоритм Ли [5] строит диаграмму Вороного только для внутренности многоугольника. Он ос- нован на алгоритмической парадигме "разделяй и властвуй". Исходный многоугольник разбивается на две разомкнутые ломаные линии, для каждой из них рекурсивно строит- ся диаграмма Вороного, а затем осуществляется объединение обеих диаграмм. Рекурсия завершается при получении в результате разбиения границы многоугольника элемен- тарных ломаных, состоящих из одной стороны многоугольника. Нужно отметить, что такой подход не вполне корректен, поскольку понятие диаграммы Вороного, сформу- лированное для внутренности многоугольника, не определено для разомкнутой ломаной линии. Это приводит к тому, что критерий завершения процесса слияния двух диаграмм Вороного, используемый в алгоритме Ли, иногда не срабатывает, что ведет к ошибке ал- горитма. Пример, демонстрирующий такую ситуацию, приведен в [6]. Тем не менее, на практике алгоритм Ли, дополненный некоторыми эвристическими элементами с целью выявления и обработки подобных ситуаций, широко используется и работает достаточно надежно [7]. Предпринимались неоднократно попытки обобщить алгоритм Ли на слу- чай многоугольника с дырами. Известные решения этой задачи [7, 8] имеют сложность O(kn + n log n) для худшего случая, где k количество дыр. Проблема использования таких решений возникает в том случае, когда число многоугольных дыр велико. По- скольку ситуация k = O(n) является вполне реальной, получается, что вычислительная сложность таких обобщений алгоритма Ли составит O(n2) в худшем случае, что весьма далеко от оптимального теоретического значения. Предлагаемое в настоящей работе решение задачи представляет собой корректное
Скелетизация многосвязной многоугольной фигуры на основе дерева смежности. . . 203 обобщение алгоритма Ли на случай многоугольника с дырами с сохранением вычисли- тельной сложности O(n log n) в худшем случае. Решение основывается на введении поня- тия смежности контуров границыММФ и построении так называемого дерева смежности контуров границы ММФ. Корректность обобщения достигается за счет использования вместо диаграммы Вороного ММФ двойственного графа диаграммы Вороного, описы- вающего смежность областей Вороного сайтов, образующих границу ММФ. 2. Основные определения Граница ММФ может быть представлена в виде объединения конечного числа точеч- ных множеств, называемых сайтами. Сайтом называется вершина ММФ (сайт-точка) либо сторона граничного много- угольника ММФ (сайт-сегмент). Будем называть сайт-точку и сайт-сегмент соседними, если они имеют непустое пе- ресечение. Условимся, что граница ММФ ориентирована таким образом, что внутренность фи- гуры находится от нее слева. Это значит, что внешний многоугольник границы обходится против, а все внутренние многоугольники по часовой стрелке. Для каждого сайта определено понятие внутренней стороны. Для сайта-сегмента внутренней стороной является полуплоскость, лежащая от него слева. А для сайта- точки это сектор, заключенный между двумя соседними сайтами-сегментами и ле- жащий слева от них. Пусть S множество сайтов, образованных границей ММФ, а S ' некоторое его подмножество S ' ? S. Окружность ненулевого радиуса называется пустой относительно множества сай- тов S ' , если внутри нее нет точек, принадлежащих сайтам из S ' . Окружность называется инцидентной сайту, если ее центр лежит с внутренней сто- роны от сайта и существует прямая линия, содержащая сайт и являющаяся касательной к окружности в точке, принадлежащей этому сайту. Два сайта называются смежными, если они являются соседними либо имеют общую пустую окружность. Определенное та- ким образом отношение смежности задает граф смежности сайтов. Граф смежности представляет собой двойственный граф диаграммы Вороного ММФ. Естественно на- зывать его графом Делоне, по аналогии с триангуляцией Делоне, являющейся графом смежности сайтов-точек в обычной диаграмме Вороного [9, 10]. Графом Делоне (ГД) ММФ будем называть граф (S, V ), у которого множество ребер V ? S ? S содержит все пары смежных сайтов из S. Аналогично графом Делоне для подмножества сайтов S ' называется граф (S ' , V '), в котором V ' ? S ' ? S ' и V ' содержит все пары смежных сайтов из S ' . В примере на рис. 2 изображены диа- грамма Вороного ММФ и соответствую- щий граф Делоне. Вершины графа Делоне соответствуют сайтам ММФ. Сайты-точки изображены кружками, а сайты-сегменты квадратиками. Ребра соответствуют па- рам смежных сайтов. Поскольку диаграм- ма Вороного является плоским графом, то двойственный ей граф Делоне тоже явля- ется плоским, т. е. допускает плоскую ук- Рис. 2. Диаграмма Вороного (a) и граф Делоне ММФ (б)
204 Л.М. Местецкий ладку. Как для всякого плоского графа, для ГД определено понятие грани. На рис. 2 все грани являются треугольными, т. е. образуются тремя попарно инцидентными сайтами. При этом для каждой грани существует пустая окружность, инцидентная всем сайтам грани. Таким образом, имеет место очевидная аналогия между графом Делоне для ММФ и обычной триангуляцией Делоне для конечного множества точек. В частности, по ГД можно построить диаграмму Вороного для ММФ за время O(n). Поэтому получается, что для эффективного решения задачи скелетизации ММФ вполне достаточно построить O(n log n)-алгоритм вычисления графа Делоне для ММФ. Главное преимущество этого подхода перед традиционным состоит в том, что граф Делоне корректно определен для любого подмножества сайтов ММФ, чего нельзя ска- зать об определении диаграммы Вороного. Это позволяет корректно сформулировать алгоритм Ли в терминах слияния ГД частей границы ММФ. 3. Граф Делоне многоугольника Рассмотрим односвязную многоугольную фигуру, т. е. простой многоугольник без дыр. Вершины многоугольника, углы в которых меньше 180*, назовем выпуклыми, а остальные вершины вогнутыми. Из n-угольника образуется 2n сайтов. Пронумеруем все сайты вдоль направления обхода границы. Рис. 3. Многоугольники (а), элементарные цепочки и первый цикл слияния (б), второй (в) и третий (г) циклы Далее разобьем последовательность сайтов на элементарные цепочки следующим об- разом. Во-первых, элементарной цепочкой будем считать сайт, соответствующий выпук- лой вершине. Кроме этого, элементарной является цепочка из одного или нескольких сайтов, лежащих между двумя последовательными выпуклыми вершинами. Во втором случае это либо один сайт-сегмент, либо несколько сайтов-сегментов, перемежаемых во- гнутыми вершинами. Очевидно, что такое разбиение границы на элементарные цепочки является единственным. На рис. 3 показан пример разбиения многоугольника на це- почки. Выпуклые сайты-точки обозначены черными кружками, вогнутые белыми, а сайты-сегменты квадратиками. Для каждой элементарной цепочки построим граф Делоне. Легко видеть, что в элементарной цепочке смежными являются только лишь соседние сайты. Поэтому ГД элементарной цепочки, состоящей из k сайтов, является связным и имеет k ? 1 ребро. Дальнейшее построение ГД многоугольника осуществляется итерационно путем по- следовательного слияния ГД цепочек. Пусть C1, C2,. . . ,Cp элементарные цепочки сай- тов, а GD(C1), GD(C2),. . . ,GD(Cp) ГД этих цепочек. Очередная итерация состоит в
Скелетизация многосвязной многоугольной фигуры на основе дерева смежности. . . 205 том, чтобы слить попарно цепочки, стоящие подряд, и из их ГД построить ГД объеди- ненных цепочек. В результате первой итерации получаем следующие ГД (при четном p): GD(C1? C2), GD(C3? C4),. . . ,GD(Cp?1? Cp). Если p нечетное, то GD(Cp) остается без изменений. В результате полного цикла слияний в очереди образуются p1 = ?p/2? ГД. На второй итерации выполняется аналогичный цикл слияний полученных ГД, в результате чего образуется ?p1/2? ГД. Аналогично выполняются следующие итерации слияния ГД. Процесс завершится, когда в очереди останется единственный ГД, который и является решением задачи. Очевидно, что общее число итераций составит O(log p). В качестве примера рассмотрим построение ГД для многоугольника, изображенного на рис. 3a. Для восьми элементарных цепочек построены графы Делоне GD(0), GD(1), GD(2), GD(3), GD(4), GD(5,6,7), GD(8), GD(9). Итерационный процесс слияния ГД со- стоит из трех циклов. В первом цикле получаются ГД GD(0,1), GD(2,3), GD(4,5,6,7), GD(8,9). Во втором цикле они сливаются в графы GD(0,1,2,3) и GD(4,5,6,7,8,9). Нако- нец, в третьем цикле получается окончательный результат GD(0,1,2,3,4,5,6,7,8,9). Для того чтобы общая вычислительная эффективность алгоритма составила O(n log n), достаточно обеспечить слияние двух ГД цепочек за время, пропорциональ- ное общему числу сайтов в этих цепочках. Действительно, в этом случае время, требу- емое для всех слияний ГД, выполняемых на одной итерации, составит O(n). Поскольку число итераций, как было показано, составляет O(log p), общее требуемое время будет O(n log p). Из того, что p < n, и получится требуемая оценка. Таким образом, задача состоит в том, чтобы обеспечить слияние двух ГД за линейное время. Предлагаемый алгоритм, дающий такое решение, чрезвычайно похож на хорошо известный алгоритм Ли-Шехтера [9], предназначенный для слияния обычных триан- гуляций Делоне. Поясним его работу на примере слияния двух ГД, изображенных на рис. 3в. Процесс слияния двух ГД состоит в построении новых ребер и в удалении некоторых старых ребер. Этот процесс напоминает сшивание двух лоскутов. Поскольку сшиваются всегда две последовательно расположенные цепочки сайтов, то последний сайт первой цепочки и первый сайт второй цепочки являются соседними. Это значит, что начальный стежок сшивания соединяет эти два сайта. В примере это сайты 3 и 4. Сайт 4 является выпуклой вершиной, поэтому всегда найдется достаточно маленькая пустая окружность, инцидентная сайтам-сегментам 3 и 5. А это значит, что ребро (3,5) тоже должно быть включено в объединенный ГД. Аналогичным образом строится первая пара новых ребер при сшивке любых ГД последовательных цепочек сайтов. Следующим шагом должно стать построение нового ребра, инцидентного сайтам 3 или 5 (рис. 4а). К новому реб- ру (3,5) примыкают два ребра: (3,0) из левого и (5,6) из правого ГД. А у реб- ра (3,0) есть инцидентная грань (3,0,1). С этой гранью связана пустая окруж- ность, инцидентная сайтам 3, 0, 1 вер- шинам этой грани. Проверка показы- вает, что сайт 5 попадает внутрь этой окружности, нарушая ее "пустоту". А это значит, что ребро (3,0) должно быть разрушено, потому что в объединенной Рис. 4. Сшивание графов Делоне. Удаление лишнего ребра (a) и построение нового ребра (b) цепочке сайтов не существует пустой окружности, инцидентной сайтам 3 и 0. В резуль-
206 Л.М. Местецкий тате, ребром, примыкающим к сайту 2, становится (3,1). Теперь кандидатами на образо- вание нового сшивающего ребра будут ребра (3,6) и (5,1). Для того, чтобы выбрать одно из них, рассмотрим тройки сайтов (3,5,1) и (3,5,6) и попытаемся построить инцидент- ные им пустые окружности (рис. 4б). Оказывается, что существует пустая инцидентная окружность только для тройки (3,5,6). Поэтому в качестве очередного сшивающего реб- ра выбирается ребро (3,6). Дальнейший процесс сшивки осуществляется аналогичным образом. Общий результат представлен на рис. 3г. Следует отметить две особенности, которые имеет описанный алгоритм по сравнению с упомянутым алгоритмом Ли-Шехтера [9]. Во-первых, построение инцидентной окруж- ности для трех произвольных сайтов является существенно более сложной задачей, чем для трех сайтов-точек. Здесь возникают 7 различных геометрических задач в зависимо- сти от типа и соседства сайтов [6], для каждой из которых приходится использовать свой метод решения. Во-вторых, при выборе очередного сшивающего ребра из двух кандида- тов может возникнуть ситуация, когда существуют пустые окружности для каждого из двух ребер-кандидатов, чего не может быть в обычной триангуляции Делоне. В этом случае из двух окружностей следует выбрать ту, центр которой лежит ближе к центру пустой окружности, построенной на предыдущем шаге. Линейная оценка сложности описанного алгоритма сшивки двух ГД основывается, как и в алгоритме [9], на том, что общее число операций пропорционально числу уда- ленных ребер двух исходных ГД и числу построенных ребер нового ГД. Из линейного времени слияния ГД следует, что общая вычислительная сложность алгоритма постро- ения ГД n-угольника составляет O(n log n). Таким образом, формулировка алгоритма Ли в терминах построения графа Делоне позволила преодолеть сложности, возникающие при его традиционном использовании для построения диаграмм Вороного. Однако проблема обобщения этого алгоритма на случай ММФ ("многоугольника с дырами") остается. Предлагаемый ниже подход к ее решению основывается на понятии дерева смежности многоугольников, составляющих границу ММФ. Рис. 5. Пустые окружности, инцидентные смежным контурам (а), граф смежности контуров (б) (дерево смежности выделено сплошными линиями)
Скелетизация многосвязной многоугольной фигуры на основе дерева смежности. . . 207 4. Дерево смежности многоугольников Рассмотрим множество многоугольников, составляющих границу ММФ. Два много- угольника из этого множества будем называть смежными, если в них существует пара смежных сайтов, принадлежащих разным многоугольникам. Другими словами, многоугольники являются смежными, если существует пустая окружность, инцидентная им обоим. Заданное таким образом отношение смежности кон- туров определяет граф смежности контуров. Очевидно, что этот граф является связным. Поэтому его остов (минимальный связный покрывающий подграф) является деревом. Такое дерево будем называть деревом смежности контуров границы ММФ. Дерево смеж- ности не является единственным. На рис. 5a представлена ММФ, имеющая 13 граничных контуров. Пустые окружно- сти, касающиеся пар контуров, демонстрируют смежность контуров. На рис. 5б показан граф смежности контуров границы МФ, а также одно из деревьев смежности контуров границы. Ребра, входящие в дерево смежности, выделены жирными линиями. Дерево смежности контуров границы ММФ дает возможность свести задачу постро- ения ГД ММФ к рассмотренной выше задаче построения ГД простого многоугольника. 5. Граф Делоне многоугольной фигуры Имея дерево смежности контуров границы ММФ, можно построить маршрут обхода всех сайтов ММФ. Этот маршрут позволяет вытянуть все сайты ММФ в единую цепь. Пусть M0,M1, . . . ,Mk контуры ММФ, причем M0 единственный внешний контур, а остальные внутренние. В дереве смежности контуров выберем в качестве корня внешний контур M0. Для каждого контура Mi, i=0,. . . ,k, построим цепочку из ki сайтов {si1, si2, . . . , siki}, упорядоченную по направлению контура, т. е. против часовой стрелки для M0 и по часо- вой стрелке для остальных контуров. Выбрав один из контуров в качестве корня, зададим на каждом ребре направление от корня к листьям. Тогда каждый узел дерева смежно- сти, кроме самого корня, может рассматриваться как потомок другого узла. Это значит, что в каждом контуре-потомке имеется сайт, для которого существует смежный сайт в контуре-предке. Не нарушая общности, будем считать, что в цепочке сайтов контура Mi, i=1,. . . ,k, этот "соединительный" сайт стоит первым, т. е. это сайт si1. Теперь преобразуем все цепочки сайтов ММФ в единую цепочку путем "врезки" друг в друга цепочек отдельных контуров. Этот процесс осуществляется рекурсивно, начи- ная с контуров, являющихся листьями в дереве смежности. Цепочка каждого контура "врезается" в цепочку его предка. Пусть контур Mi является потомком контура Mj , причем пара смежных сайтов это первый сайт si1 в цепочке Mi, а также некоторый сайт sjt в цепочке контура Mj . Тогда объединенная цепочка имеет следующий вид: {sj1, sj2, . . . , sjt, si1, si2, . . . , siki , si1, sjt, sj t+1, , . . . , sjkj}. Цепочка контура Mi вставляется в цепочку контура Mj после элемента sjt, а после последнего ее сайта ставится пара сайтов si1, sjt, образующая "мост" для обратного пе- рехода с контура Mi на контур Mj . У контура Mj может быть несколько потомков, и цепочки сайтов всех их должны быть вставлены таким образом в цепочку сайтов Mj . После этого цепочка самого Mj вставляется в цепочку его предка в дереве смежности. В результате этого процесса будет
208 Л.М. Местецкий выполнена вставка всех цепочек в цепочку сайтов внешнего контура. Очевидно, что длина этой объединенной цепочки сайтов составит O(n). Процесс врезки цепочек сайтов иллюстрирует рис. 6. Рис. 6. Преобразование границы ММФ в единую цепочку сайтов путем "врезки"друг в друга цепочек сайтов отдельных контуров Рис. 7. Случай присоединения нескольких контуров-потомков к одному и тому же сайту контура-предка Теперь к объединенной цепочке сайтов может быть применен алгоритм построения ГД, который был использован для простого многоугольника. При этом в алгоритме необ- ходимо сделать две модификации, связанные с появлением в цепочке пар смежных сай- тов, не являющихся соседними. Во-первых, процесс образования элементарных цепочек теперь должен строиться в два этапа. Сначала образуются элементарные цепочки из пар смежных сайтов разных контуров. А затем образуются элементарные цепочки из сайтов одного контура так, как это делается в случае простого многоугольника. Во- вторых, после того, как будет построен ГД объединенной цепочки, ребра, образованные связующими парами сайтов (из дерева смежности контуров), окажутся продублирован- ными, т. е. войдут в ГД дважды. Поэтому необходимо провести "склейку" таких ребер. Склейка представляет собой объединение пары таких ребер в одно с коррекцией соот- ветствующих ссылок на вершины и ребра графа. Следует отметить особый случай, когда несколько контуров имеют общего предка в дереве смежности и при этом их пустые окружности инцидентны одному и тому же сайту в контуре-предке (рис. 7). В этом случае врезка цепочек контуров-потомков в цепочку контура-предка осуществляется строго в той последовательности, в которой происходит касание окружностей общего сайта в контуре-предке. Пример работы алгоритма представлен на рис. 8. Исходная ММФ (рис. 8а) имеет два граничных контура, которые образуют 16 сайтов. Предположим, что дерево смежности многоугольной фигуры известно и пара смежных сайтов в двух граничных контурах есть (5, 10), т. е. существует пустая окружность, инцидентная сайтам 5 и 10. В результате объединения цепочек двух контуров получается объединенная цепочка сайтов: {0, 1, 2, 3, 4, 5, 10, 11, 12, 13, 14, 15, 10 ,5 ,6 , 7, 8, 9}. В этой объединенной цепочке сначала выделим элементарные цепочки сайтов. При этом сначала образуются две элементарные цепочки из пары смежных сайтов, обозначенные (5,10) и (10',5') на рис. 8б. А затем образуются остальные элементарные цепочки. Далее строятся ГД 11 элементарных цепочек, которые последовательно сливаются в общий ГД за 4 итерации (рис. 8в-8е). В полученном ГД (рис. 8е) остается склеить ребра (5,10) и (10',5'), в результате чего получается искомый ГД, изображенный на рис. 2б. Таким образом, при наличии дерева смежности контуров построение графа Делоне ММФ можно осуществить с использованием того же самого алгоритма, который стро- ит ГД простого многоугольника, за время O(n log n). Естественно, что ценность этого
Скелетизация многосвязной многоугольной фигуры на основе дерева смежности. . . 209 результата зависит от того, какое время потребуется для построения дерева смежно- сти контуров. Предлагаемый ниже алгоритм позволяет построить это дерево за время O(n log n) в худшем случае. Рис. 8. ММФ (а), объединенная цепочка сайтов (б) и 4 цикла слияния ГД цепочек (в-е) 6. Построение дерева смежности многоугольной фигуры 6.1. Вертикальное дерево смежности контуров Среди всех возможных деревьев смежности мы будем строить "ориентированные по направлению" деревья. Не нарушая общности, будем рассматривать в качестве такого направления ось ординат ("вертикальное направление"). Для каждого внутреннего гра- ничного контура выделим вершину, имеющую максимальную проекцию на это направ- ление. Для вертикального направления это просто вершина с максимальной ординатой. В случае если таких вершин в контуре несколько, выберем одну из них. Эту вершину бу- дем называть макушкой многоугольника. С каждой макушкой свяжем луч, выходящий из нее вверх. Рассмотрим множество пустых окружностей, инцидентных макушке, центры кото- рых расположены на ее луче. Среди таких окружностей всегда найдется максималь- ная. Такую окружность будем называть пузырем. Пузырь инцидентен макушке и сай- ту из другого многоугольника. Этот сайт назовем опорным для макушки и контакт- ным для пузыря. Если таких сайтов несколько, выберем в качестве опорного лишь один из них (любой). Многоугольник, которому принадлежит опорный сайт, назовем верх- ним, поскольку он всегда лежит выше макушки. Легко видеть, что каждый многоуголь- ник является смежным со своим верхним многоугольником. Таким образом, построен- ные пузыри определяют отношение частичного порядка на множестве многоугольников: у каждого внутреннего многоугольника существует единственный верхний многоуголь-
210 Л.М. Местецкий ник. Единственный многоугольник, не имеющий верхнего это внешний граничный многоугольник. Следовательно, нами получено дерево смежности контуров границы ММФ, в котором пустыми окружностями, инцидентными парам контуров, являются пу- зыри многоугольников. Такое дерево смежности будем называть вертикальным деревом смежности. Пример вертикального дерева смежности контуров для ММФ "бабочка" представлен на рис. 5б. Можно предложить следующий наивный алгоритм построения вертикального дере- ва смежности контуров. Для каждой макушки нужно перебрать все сайты ММФ и для каждого сайта построить пустую окружность, инцидентную макушке и сайту с центром на луче этой макушки (если такая окружность существует). Затем среди построенных окружностей нужно для каждой макушки найти окружность минимального радиуса. Найденные таким образом пузыри полностью определяют вертикальное дерево смеж- ности граничных многоугольников. Очевидно, что вычислительная сложность такого алгоритма составит O(p n), где p количество многоугольников в границе ММФ. По- скольку в худшем случае p = O(n), общая сложность наивного алгоритма имеет порядок O(n2), что является неприемлемым. Требуется более эффективный алгоритм. 6.2. Алгоритм плоского заметания Источником низкой эффективности наивного алгоритма является перебор для каж- дой макушки всех сайтов, в том числе и тех, которые находятся далеко и заведомо не могут оказать влияние на построение ее пузыря. Для того чтобы исключить анализ таких несущественных сайтов, воспользуемся идеей плоского заметания. Рассмотрим горизонтальную прямую, перемещаемую снизу вверх и последователь- но заметающую ММФ. Процесс заметания условно развивается во времени, с каждым моментом времени связано некоторое положение заметающей прямой. При этом мно- жество сайтов, пересекаемых заметающей прямой, естественным образом упорядочено слева направо по абсциссам точек пересечения. Рассмотрим также множество вертикаль- ных лучей, выходящих из макушек. В момент пересечения макушки заметающей прямой соответствующий луч может занять свое место в упорядоченном множестве пересекае- мых сайтов. Нетрудно убедиться в справедливости следующего утверждения. Если сайт является опорным для некоторого пузыря, то существует такое положение заметающей прямой, при котором между этим сайтом и вертикальным лучом, проходящим через центр пузыря, нет других сайтов. Это необходимое условие, которому должен удовлетворять опорный сайт любого пу- зыря, позволяет организовать поиск опорного сайта среди тех сайтов, которые в процессе заметания оказались соседними с вертикальными лучами. Процесс заметания реализуется, как это обычно принято [10, 11], с помощью двух структур данных: статуса заметающей прямой и очереди событий. Статус заметающей прямой представляет собой упорядоченное множество сайтов и лучей, пересекаемых за- метающей прямой. Статус динамически меняется по мере перемещения прямой. Момен- ты изменения статуса называются событиями. События естественным образом упорядо- чиваются по времени наступления. Упорядоченное множество событий образует очередь событий. Статус заметающей прямой и очередь событий реализуются в виде сбалансированных деревьев [10, 12] (АВЛ-, 2-3- или красно-черные деревья), в результате чего выполнение операций поиска, включения и исключения элементов в структурах осуществляется за время O(logK), где K число элементов, находящихся в структуре.
Скелетизация многосвязной многоугольной фигуры на основе дерева смежности. . . 211 Изменения статуса состоят в том, что заметающая прямая "наехала" на очередной сайт, либо "съехала" с какого-то сайта. Очевидно, что это происходит при пересече- нии заметающей прямой вершины ММФ, следовательно, общее число таких событий составляет O(n). Поскольку общее число элементов в статусе есть также O(n), время включения-исключения сайта или луча составляет O(log n). Для каждого события необ- ходимо проверить, не образовалась ли пара луч-сайт такая, что между ними в статусе нет других лучей. Если образовалась, то нужно проверить их на контакт. Практическую реализацию этого процесса продемонстрируем на приме- ре (рис. 9). Для макушки многоуголь- ника S0 в момент, когда она попала в статус, строим вертикальный луч R0 и пузырь бесконечного размера, т. е. по- луплоскость C0. При перемещении за- метающей прямой в положение L1 в ста- тус попадает сайт S1, который оказыва- ется соседом с лучом R0. Инцидентная сайтам S0 и S1 окружность C1 имеет ра- диус меньше, чем C0, поэтому она ста- новится кандидатом в пузыри для ма- Рис. 9. Построение пузыря для макушки кушки S0. Таким образом, текущим "кандидатом в пузыри" становится окружность C1. Следующими событиями, которые происходят при том же положении заметающей прямой L1, является исключение из статуса сайта S1 и включение вместо него сайта S2. Окружность C2, инцидентная сайтам S0 и S2, меньше окружности C1, поэтому она зани- мает место текущего кандидата. Далее при положении заметающей прямой L2 в статусе происходит замена сайта S2 сайтом S3, которая не влечет за собой коррекции пузыря. А вот следующее событие замена в статусе сайта S3 сайтом S4 приводит к появле- нию новой пустой окружности C3, которая и становится сначала текущим кандидатом, а затем и окончательным пузырем макушки S0. Следует еще отметить, что в момент, когда заметающая прямая станет верхней касательной для окружности C3, луч R0 будет исключен из статуса. Рис. 10. Контакт пузыря с сайтом, не являющимся соседним Рис. 11. Соседство нескольких лучей в статусе
212 Л.М. Местецкий Поскольку проверка того, является ли сайт опорным для пузыря, осуществляется за конечное время O(1), может сложиться впечатление, что общее время, необходимое для нахождения всех пузырей таким способом, составит O(n log n). Однако так будет не всегда. Картину портит ситуация, когда между опорным сайтом и лучом оказывается другой луч. В примере, представленном на рис. 10, пузырь C0 для макушки S0 является инцидентной окружностью для сайта S3, но при этом сайт S3 никогда не окажется непо- средственным соседом луча R0 в статусе: между ними всегда будет находиться луч R1. Возможность возникновения подобных ситуаций приводит к усложнению обработки события соседства сайта и луча. Получается, что если в статусе стоят по соседству подряд несколько лучей, то необходимо проверить на контакт с сайтом пузыри всех этих лучей. В результате может сложиться ситуация (рис. 11), когда общее время, необходимое для проверки, становится равным O(p q), где p число соседних лучей в статусе, а q число сайтов, оказавшихся с ними соседями в процессе заметания. Очевидно, что в худшем случае p и q могут иметь порядок O(n), что опять приводит к общему времени всех проверок O(n2). Конечно, случаи, подобные изображенному на рис. 11, явно являются экзотическими. В практических случаях, когда количество стоящих подряд лучей в статусе не превос- ходит некоторого небольшого числа, общее время работы останется O(n log n). Однако для гарантированного достижения такой эффективности в действительно худшем случае алгоритм нуждается еще в одном усовершенствовании. 6.3. Заметание с поглощением пузырей В ситуации, показанной на рис. 10, контакт сайта S3 с пузырем C0 стал возможен из-за того, что окружность C0 "накрыла" окружность C1, лежащую между S3 и лучом R0. Такое взаимное положение пузырей будем называть доминированием. Формально это означает, что верхняя точка пузыря C1 (доминируемого) оказалась внутри пузыря C0 (доминирующего). Для того, чтобы корректно обработать ситуации, подобные этой, необходимо сначала выявить все случаи доминирования пузырей. Для этого процесс заметания, описанный выше, дополняется функцией контроля доминирования пузырей. Этот контроль осу- ществляется в процессе заметания и состоит в выполнении следующих действий: 1. Если два луча оказались соседними в статусе, то осуществляется проверка их на доминирование, т. е. на попадание вершины пузыря внутрь соседнего пузыря. 2. В случае, если доминирование имеет место, то планируется событие "поглощение" на момент, когда один пузырь целиком окажется внутри другого. Соответствующий момент вычисляется как наибольшая из ординат двух точек пересечения окруж- ностей. 3. При наступлении события поглощения доминируемый пузырь (его луч) удаляет- ся из статуса и помещается в доминирующий пузырь. Для этого в доминирующем пузыре заводится список-магазин для поглощенных пузырей, работающий по прин- ципу "последним пришел первым вышел". 4. В процессе заметания коррекция размеров доминирующих пузырей сопровождает- ся проверкой того, сохраняется ли доминирование над поглощенными пузырями. Если доминирования больше нет, то поглощенный пузырь возвращается в статус на свое место. 5. При выявлении контакта пузыря и сайта коррекция осуществляется только для доминирующего пузыря. Контакты сайта с поглощенными пузырями выявляются в процессе постобработки после завершения заметания.
Скелетизация многосвязной многоугольной фигуры на основе дерева смежности. . . 213 Основная экономия времени в этом алгоритме для ситуаций типа изображенной на рис. 10 достигается за счет правила 5, поскольку при соседстве сайта и луча не произво- дится полный перебор всех остальных лучей, стоящих подряд. Общая вычислительная сложность процесса заметания остается O(n log n), поскольку число событий поглощения составляет O(n), а обработка, связанная с выполнением правил 1-5, требует фиксиро- ванного времени O(1). Модифицированный таким образом алгоритм плоского заметания на выходе дает вложенные цепочки доминируемых пузырей. Каждая такая цепочка имеет вид домини- рующего пузыря со своим списком-магазином поглощенных им доминируемых пузырей. Те пузыри, которые не были поглощены, можно рассматривать как цепочки длины 1. При этом все пузыри имеют контактные сайты, определяющие их размеры. Однако правило 5, позволившее сэкономить время на переборе, привело к тому, что среди доминируемых пузырей могут оказаться такие, для которых контактный сайт найден неправильно. При- чина этого состоит в том, что после попадания такого пузыря в список поглощенных, проверка его на контакт с сайтами не производилась. Для того, чтобы восстановить пра- вильные контакты для доминируемых пузырей, требуется после завершения заметания провести дополнительный анализ списков поглощенных пузырей. 6.4. Определение опорных сайтов для поглощенных пузырей Рассмотрим цепочку пузырей {C0,C1,. . . ,Ck}, полученную следующим образом. Пу- зырь C0 является "крайним", т. е. его луч C0 непосредственно соседствует с каким-то сайтом в статусе. Он доминируется пузырем С1, тот, в свою очередь, доминируется пузы- рем C2 и т. д. Наверху в этой последовательности находится доминирующий пузырь Ck. В процессе заметания для всех этих пузырей были получены все сайты, оказавшие- ся с ними соседними. Все такие соседства прошли через очередь событий, причем в последовательности снизу-вверх. Это значит, что известна последовательность сайтов {S0,S1, . . . ,Sm}, которые только и могут быть контактными для пузырей из цепочки. Остается лишь сопоставить пузыри и сайты из этих множеств между собой. Для того, чтобы это было сделано эффективно, воспользуемся тем очевидным соображением, что такие контакты обладают следующим свойством монотонности. Если пузыри Ci и Cj имеют контактные сайты Sp и Sq и i < j, то p ? q. С учетом этого свойства процесс установки соответствия пузырей и контактных сайтов может быть построен следующим образом. Выберем пузырь Cr из середины цепочки, т. е. r = ?k/2?, и найдем для него кон- тактный сайт полным перебором всех сайтов из {S0,S1, . . . ,Sm}. Предположим, что это сайт St. Теперь можем воспользоваться тем, что для пузырей из нижней части цепочки {C0,C1, . . . ,Cr?1} контактные сайты нужно искать среди {S0,S1, . . . ,St}, а для пузырей из {Cr+1, . . . ,Ck} среди сайтов {St, . . . ,Sm}. Это значит, что для двух средних пузырей подмножеств {C0,C1, . . . ,Cr?1} и {Cr+1, . . . ,Ck} поиск контактных сайтов потребует пе- ребора в общей сложности тех же {S0,S1, . . . ,Sm} сайтов. Очевидно, что обработка всех пузырей потребует log(k) шагов при числе операций на каждом шаге O(m), т. е. затраты на определение опорных сайтов для всей цепочки составят O(mlog k). Пусть l номер цепочки доминирования пузырей, включающей kl пузырей и име- ющей ml соседних сайтов. Тогда общее время постобработки всех цепочек составит O(Pml log kl). Поскольку общее число пузырей Pkl ? n, получаем Pml log kl ? Pml log n = log nPml. Величина Pml представляет собой общее число событий со- седства сайтов и пузырей в процессе заметания. Очевидно, что эта величина есть O(n). С учетом этого получаем, что общее время на описываемый процесс составит O(n log n).
214 Л.М. Местецкий 7. Вычислительный эксперимент Описанный алгоритм реализован почти полностью (построение дерева смежности контуров выполнено в варианте перебора всех соседних лучей в статусе без поглощения пузырей). Алгоритм проверен на реальных задачах обработки изображений (n?104?105). Рис. 12. Исходный сканированный документ (а) и его увеличенный фрагмент (б) Рис. 13. Построение внешнего скелета текста. ММФ и ее скелет (а), увеличенный фрагмент (б) В качестве примера применения алгоритма рассмотрим задачу сегментации изобра- жения в системах распознавания текста. Сканированный документ подвергается обра- ботке, целью которой является выделение строк, слов и отдельных символов текста. Сложность решения задачи сегментации в большой степени определяется тем, что рас- положение документа при сканировании не всегда идеально совпадает с полем сканера. В результате ориентация строк полученной электронной копии документа не совпадает с ориентацией горизонталей растрового изображения. На рис. 12а представлен реальный фрагмент сканированного текста, подлежащий сегментации, а на рис. 12б показана в увеличенном масштабе растровая структура этого изображения.
Скелетизация многосвязной многоугольной фигуры на основе дерева смежности. . . 215 Для сегментизации изображения сначала выполняется аппроксимация изображения многосвязной многоугольной фигурой. Внешней границей этой фигуры является гра- ничный прямоугольник документа, а внутренними границами контуры изображен- ных символов. Каждый контур представляет из себя многоугольник минимального пе- риметра, разделяющий черные и белые точки растрового образа. Построение контуров осуществляется методом, описанным в [1]. Далее для полученной таким образом ММФ строится дерево смежности граничных контуров и диаграмма Вороного ММФ. Общий вид диаграммы Вороного и отдельный ее фрагмент, соответствующие образам рис. 12а и рис. 12б, представлены на рис. 13. Характеристики размеров и затраченного времени для получения решения на процессоре Intel Pentium M 1.60 ГГц приведены в таблице. Размер сканированного изображения (в пикселях) 747?596 Число граничных многоугольников 998 Общее число вершин многоугольной фигуры 11689 Число ребер в скелете многоугольной фигуры 24632 Число вершин в скелете многоугольной фигуры 24214 Время построения ММФ из растрового изображения, с 0.081 Время построения дерева смежности границы ММФ, с 0.200 Время построения диаграммы Вороного, с 0.771 Общее время работы, с 1.052 Полученная диаграмма Вороного преобразуется в скелет ММФ, являющийся, по су- ществу, внешним скелетом сканированного документа. Обработка внешнего скелета да- ет возможность выделения и распрямления строк в тексте документа, выделения слов и отдельных символов, а также определения последовательности расположения симво- лов в строках. Описанный эксперимент носит иллюстративный характер. Предлагаемый алгоритм позволяет работать с данными намного большей размерности, в частности, обрабатывать полную страницу сканированного текста. 8. Заключение Предложенный в работе алгоритм построения скелета многосвязной многоугольной фигуры основан на построении дерева смежности граничных контуров фигуры, что поз- воляет свести задачу к известной задаче скелетизации простого многоугольника. Вычис- лительная сложность предложенного алгоритма построения дерева смежности границы ММФ на основе плоского заметания составляет O(n log n). Предложенный алгоритм по- строения графа Делоне ММФ, решающий задачу на основе полученного дерева смежно- сти, также имеет сложность O(n log n). Поскольку сложность построения скелета ММФ из ГД составляет O(n), предлагаемое общее решение задачи скелетизации ММФ имеет сложность O(n log n) для худшего случая. Список литературы [1] Местецкий Л.М. Непрерывный скелет бинарного растрового изображения //Тр. Меж- дунар. конф. "Графикон-98". --Москва, 1998. [2] Kirkpatrick D.G. Efficient computation of continuous skeletons //Proc. of the 20th Annual IEEE Symposium on FOCS. -- 1979. -- P. 18-27.
216 Л.М. Местецкий [3] Fortune S. A sweepline algorithm for Voronoi diagrams //Algorithmica. -- 1987. -- Vol. 2. -- P. 153-174. [4] Yap C.K. An O(n log n) algorithm for the Voronoi diagram of the set of simple curve segments //Discrete Comput. Geom. -- 1987. -- Vol. 2. -- P. 365-393. [5] Lee D.T. Medial axes transform of planar shape //IEEE Trans. Patt. Anal. Mach. Intell. PAMI-4. -- 1982. -- P. 363-369. [6] Местецкий Л. М. Скелетизация многоугольной фигуры на основе обобщенной триангу- ляции Делоне //Программирование. -- 1999. --№ 3. -- С. 16-31. [7] Лагно Д., Соболев А. Модифицированные алгоритмы Форчуна и Ли скелетизации мно- гоугольной фигуры //Тр. междунар. конф. "Графикон-2001". --Москва, 2001. [8] Srinivasan V., Nackman L.R., Tang J.-M., Meshkat S.N. Automatic mesh generation using the symmetric axis transform of polygonal domains //Proc. of the IEEE 80. -- 1992. -- Vol. 9. -- P. 1485-1501. [9] Lee D.T., Schachter B.J. Two algorithms for constructing a Delaunay triangulation //Int. J. Comput. Inf. Sci. -- 1980. -- Vol. 9. -- P. 219-242. [10] Препарата Ф., Шеймос М. Вычислительная геометрия: введение. --М.: Мир, 1989. [11] Dehne F., Klein R. "The big sweep": On the power of the wavefront approach to Voronoi Diagrams //Algorithmica. -- 1997. -- Vol. 17. -- P. 19-32. [12] Ахо А., Хопкрофт Дж., Ульман Дж. Построение и анализ вычислительных алгорит- мов. --М.: Мир, 1979. Факультет ВМиК, Московский государственный университет, Воробьевы горы, 2-й учебный корпус, Москва, 119899 E-mail: l.mest@ru.net Статья поступила 12 января 2006 г.