 Министерство образования и науки Российской Федерации

федеральное агентство по образованию

Государственное образовательное учреждение высшего профессионального образования 
"Московский физико-технический институт (государственный университет)"


                                                                                                                           УТВЕРЖДАЮ
Проректор по учебной работе
_____________ Е.В. Глухова
"_____" ______________ 2008 г.


ПРОГРАММА
по курсу "Проектирование программных систем"
по направлению    010600  "Прикладные математика и физика"
магистерская программа ________________________________________________
факультет Инноваций и высоких технологий
курс  3
семестр   5 			
Зачёт (диф.)	     5    семестр

Лекции   34   часа						
Семинарские занятия   34   часа				
Лабораторные занятия   нет	
Самостоятельная работа 34 часа
Всего   106   часов						

Автор программы 					________________________ А.С. Хританков 




Программа утверждена  
решением Ученого Совета ФИВТ 				"  25  "   августа  2009 г.

Председатель Ученого Совета 			________________________ В.Е. Кривцов




Москва 2009

Программа дисциплины "Проектирование программных систем"



Содержание программы
Лекции (34 часа)							          6	 семестр
Семинарские занятия (34 часа)					          6 	 семестр
Лабораторные работы 						         нет	 семестр
Расчетные задания, рефераты					         нет	 семестр
Курсовые проекты/работы (28 часов)				          6	 семестр
Объем самостоятельной работы по учебному плану (6 часов)	          6	 семестр

Структура и задачи курса
Аннотация:
Курс проектирование программных систем посвящен изучению современных подходов к разработке сложных приложений и программных комплексов. В рамках курса студенты изучают методы структурного проектирования, унифицированный язык моделирования и на его основе методы объектно-ориентированного анализа и проектирования. Программа курса в достаточной степени отвлечена от конкретных технологий, чтобы дать адекватное представление о дисциплине проектирования ПО. В результате обучения, студенты знакомы с методами проектирования, способны самостоятельно разработать согласованную модель программной системы, удовлетворяющей функциональным требованиям и обосновать приятые проектные решения, что подтверждается курсовым проектом. Курс включает следующие основные разделы:
Основы инженерии программного обеспечения
Элементы языка UML
Структурное проектирование
Объектно-ориентированное проектирование

Место курса в образовательной программе:
Изучение курса "Проектирование программных систем" требует предварительных знаний в следующих областях: информатика, объектно-ориентированное программирование, технология разработки ПО. Желательно владение техническим английским языком, так как часть материалов по курсу представлена на английском языке.

Цели и задачи курса:
Познакомить студентов с процессом разработки программных систем с применением технологий моделирования. Дать представление о существующих методологиях проектирования программного обеспечения и выработать у студентов практические навыки по их применению. Уклон делается на разработке прикладного корпоративного программного обеспечения, например систем поддержки управления предприятием и сходных с ними.


Темы курса, их объем и содержание
Введение в инженерию программного обеспечения (4 часа). Различия между программным и аппаратным обеспечением. Показатели качества ПО. Виды ПО. Цели и задачи проектирования. Отличия проектирования от исследования. Основные определения в инженерии ПО. Процесс, проект, рабочий продукт. Основные процессы разработки. Предписывающие и описывающие процессы. Каскадная, инкрементная, итеративная модель. Прототипирование. Обзор стандартов в области инженерии ПО. Организация разработки ПО.  Метод  Scrum. Обзор Rational Unified Process.
Основы моделирования при помощи  UML  (1 час). Понятие о моделировании и проектировании. Структурное моделирование. История создания UML. Структура метамодели  UML . Основные понятия: элемент, классификатор, отношение, пространство имен. Представления модели, виды диаграмм. 
Статическое представление модели (4 часа). Диаграммы классов. Понятия класса, интерфейса, типа данных. Виды отношений: ассоциация, зависимость, абстракция, реализация и другие. Ограничения. Экземпляры классов. Профили. Расширение модели. Варианты использования (прецеденты). Описание требований при помощи прецедентов. Введение в объектно-ориентированный анализ. Выделение классов. Метод Аббота, карточки Класс-Контракт-Коллеги (CRC), диаграммы устойчивости. 
Динамическое представление модели (7 часов). Поведение. Основные определения.  Структурированный классификатор. Композит и часть. Диаграммы внутренней структуры. Представление взаимодействия. Диаграммы взаимодействия и коммуникации. Основные понятия: роль, спецификация выполнения, сообщение. Кооперация. Описание сценариев вариантов использования. Представление деятельности. Представление о сетях Петри. Виды действий, разделы. Контекст выполнения. Потоки управления и данных (объектные). Представление процессов на диаграммах деятельности. Представление конечных автоматов. Диаграммы схем состояний. Состояние, переход, псевдосостояния, составные состояния. Семантика конечных автоматов в UML. Обработка событий, переход по завершении. Моделирование жизненного цикла классификатора с помощью конечных автоматов. Пакеты. Управление моделью. 
Семестровая контрольная работа (2 часа).
Методы структурного проектирования (4 часа). Основные понятия. Модуль. Процесс структурного проектирования. Виды методов: сверху-вниз (низходящие), снизу-вверх (восходящие), итеративные. Модульность. Принципы разделения системы на модули. Метрики качества модульной структуры. Метод постепенного уточнения, структурные диаграммы ( STD ). Методика структурного анализа/проектирования (SSA/SD). Элементарные транзакции. Диаграммы потоков данных (DFD). Метод структурного программирования Джексона (JSP). Разбор примеров применения. 
Введение в архитектуру ПО (1 час). Архитектура и структура программной системы. Факторы, влияющие на архитектуру. Заинтересованные лица. Роль архитектуры. Стандартные стили архитектур: вызов-возврат, каналы-фильтры, многоуровневая, клиент-сервер, сервис-ориентированная. Совместное применение стилей. 
Объектно-ориентированное проектирование (6 часов). Абстрактные типы данных. Принципы ООП. Характеристики качества объектно-ориентированной структуры программы. Паттерны проектирования. Структурные, создания и паттерны поведения (GoF). Примеры паттернов. Строитель. Посетитель. Шаблон метода. Фасад. Мост. Метрики качества объектно-ориентированной структуры. Эвристики GRASP. Комплект метрик Чидамбера-Кемерера. Реализация требований качества к ПО при помощи ООП. Модифицируемость, переносимость, устойчивость.
Документирование архитектуры и структуры программ (1 час). Роль документирования. Понятие о точке зрения. Рекомендации и структура документа.
Проблемы современной практики проектирования  (4 часа). Модельно-ориентированный подход к разработке (MDD/MDA). Платформонезависимая модель и платформозависимая модель (PIM/PSM). Сервис-ориентированная архитектура. Потоки работ (wor k flow). Использование каркасов приложений ( framework ). Проблемы проектирования распределенных объектных систем. Понятие о транзакциях. Другие темы.

Семинары
1 занятие (2 часа). Введение в программную инженерию. Разбор примера проекта. Роли, артефакты, рабочие продукты. Фазы проекта. Модели жизненного цикла. Знакомство с CASE инструментом. Разбор примеров моделирования
2 занятие (2 часа). Применение диаграмм классов для описания предметных областей. Построение моделей. Практика нахождения абстракций и выделения классов. Разбор примеров.
3 занятие (2 часа). Практика описания функциональных требований к системе. Построение моделей. Обсуждение  и предложение предметной области к описанию.
4 занятие (2 часа). Проверочная работа. Выбор темы проекта. Постановка первого задания.
5 занятие (2 часа). Описание поведение при помощи взаимодействий и деятельности. Практика описании поведения. Разбор примеров. 
6 занятие (2 часа). Описание поведение при помощи деятельности и схем состояний. Сравнение различных подходов. Разбор примеров и обсуждение.
7 занятие (2 часа). Консультации по проектам. Сдача первой части проекта.
8 занятие (2 часа). Обсуждение принципов декомпозиции системы. Практика структурного проектирования. 
9 занятие (2 часа). Обсуждение принципов ООП. Разбор примеров применения паттернов. Разбор примеров построения модели реализации.
10 занятие (2 часа). Разбор примеров применения паттеронов проектирования. Подготовка к контрольной.
11 занятие (2 часа). Консультации по проектам. 
12 занятие (2 часа). Разбор контрольной работы. Консультации по проектам.
13 занятие (2 часа). Защита проектов.


Контроль и оценка качества изучения дисциплины
Контроль усвоения теоретических знаний:
Контрольная работа с оценкой по пятибалльной шкале.
Контроль усвоения практических навыков:
Две оценки по пятибалльной шкале по результатам выполнения курсового проекта.
Итоговый контроль теоретических и практических знаний студента в сессию:
Дифференцированный зачёт.
Весовой коэффициент зачетной оценки практических знаний в оценке за семестр - 0,6.

Распределение часов курса по темам, семинарским занятиям и лабораторным работам
№	Наименование темы	Всего  часов	Из них			Лекции	Семинары		1	Введение в инженерию программного обеспечения	6	4	2		2	Основы моделирования при помощи  UML 	 1	 1	0		3	Статическое представление модели	10	4	6		4	Динамическое представление модели	14	7	7		5	Семестровая контрольная работа	4 	 2	2		6	Методы структурного проектирования	 6	 4	2		7	Введение в архитектуру ПО	 1	 1	 0	 	8	Объектно-ориентированное проектирование	11	6	5		9	Документирование архитектуры и дизайна	1	1	0		10	Проблемы современной практики проектирования  	4	4	 0	 	11	Консультации по проектам	6	0	6		12	Защита проектов. Проведение зачета	2	0	4		Итого:	66	34	34		

Список литературы
Основная литература:
М. Фаулер. UML. Основы. Третье издание. (любой издатель)
Ларман К. Применение UML 2.0 и шаблонов проектирования. Введение в объектно-ориентированный анализ, проектирование и итеративную разработку. - Вильямс. - 2009. - 736 с.
Гамма Э., Хелм Р., Джонсон Р. Приемы объектно-ориентированного проектирования. Паттерны проектирования, любое издание.
 R. Pressman. Software Engineering: A Practitioner's Approach, 6th Ed. - McGraw Hill, 2005
 С. А. Орлов. Технологии разработки программного обеспечения. Разработка сложных программных систем. Для студентов и преподавателей высших учебных заведений. - Питер, 2004. - 527 с.
Л. Басс, П. Клементс, Р. Кацман. Архитектура программного обеспечения на практике. 2-е изд. - Л.:Питер, 2006, 576 с.
C. Амблер, Гибкие Технологии: Экстремальное Программирование и Унифицированный Процесс Разработки. - Питер, 2005
Дополнительная литература:
Б. Мейер, Объектно-ориентированное конструирование программных систем. - Русская Редакция, 2005
 B. Liskov, J. Guttag. Program Development in Java: Abstraction, Specification and Object-Oriented Design. - Addison-Wesley, 2000
 Интернет-источники:
Сообщество системных аналитиков (www.uml2.ru)
Введение в гибкое моделирование ( www . agilemodeling . com )
INTUIT.RU: Интернет-Университет Информационных Технологий: Программирование: Объектно-ориентированное программирование (http://www.intuit.ru/catalog/se/objectprog/)
 InformIT . Статьи по ИТ и разработке  ( www . informit . com )
Спецификация UML 2.2 на сайте OMG. ( http :// www . omg . org / spec / UML /2.2/  )









3



